diff --git a/src/MSXPiDevice.cc b/src/MSXPiDevice.cc
index af9fe013e..9b955c8f3 100644
--- a/src/MSXPiDevice.cc
+++ b/src/MSXPiDevice.cc
@@ -1,7 +1,9 @@
 #include "MSXPiDevice.hh"
 
 #include "Timer.hh"
+#include "xrange.hh"
 
+#include <algorithm>
 #include <array>
 
 namespace openmsx {
@@ -134,13 +136,11 @@ void MSXPiDevice::readLoop()
 			continue;
 		}
 		std::lock_guard lock(mtx);
-		for (ssize_t i = 0; i < n; ++i) {
-			if (rxQueue.size() < MAX_QUEUE_SIZE) {
-				rxQueue.push_back(buf[i]);
-			} else {
-				break; // skip this byte
-			}
-		}		
+		// skip excess bytes
+		static constexpr size_t MAX_QUEUE_SIZE = 16 * 1024;
+		for (auto i : xrange(std::min<size_t>(n, MAX_QUEUE_SIZE - rxQueue.size()))) {
+			rxQueue.push_back(buf[i]);
+		}
 	}
 }
 
diff --git a/src/MSXPiDevice.hh b/src/MSXPiDevice.hh
index 5b95f05e5..069b1a4ec 100644
--- a/src/MSXPiDevice.hh
+++ b/src/MSXPiDevice.hh
@@ -25,7 +25,7 @@ public:
 	byte readIO(uint16_t port, EmuTime time) override;
 	byte peekIO(uint16_t port, EmuTime time) const override;
 	void writeIO(uint16_t port, byte value, EmuTime time) override;
-	
+
 private:
 	void close();
 	void readLoop();
@@ -43,7 +43,6 @@ private:
 
 	// MSXPi logic
 	bool readRequested = false;
-	static constexpr size_t MAX_QUEUE_SIZE = 16 * 1024;
 };
 
 } // namespace openmsx

